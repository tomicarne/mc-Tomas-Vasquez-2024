# -*- coding: utf-8 -*-
"""taller 18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wWg1eVT_4VHsbXmhtvEkyI8_Wuo3Jabl
"""



import matplotlib.pyplot as plt
import numpy as np
import math
from sklearn.linear_model import LinearRegression

# Create some fake data for two variables: x and y
X = [1, 2, 3, 4, 5, 6]
Y = [1.6,2.3,3.4,4.5,6.4,9]
n = len(X)
# Plot the data to see the relationship between x and y
plt.scatter(X, Y)
plt.show()



suma_x = suma_y = suma_xy = suma_x2 = 0
for r in range(n):
    suma_x = suma_x + X[r]
    suma_y = suma_y + np.log(Y[r])
    suma_xy = suma_xy + X[r] * np.log(Y[r])
    suma_x2 = suma_x2 + X[r]**2

X_mean = suma_x / len(X)
Y_mean = suma_y / len(Y)

a1 = (len(X)*suma_xy-suma_x*suma_y)/(len(X)*suma_x2-suma_x**2)
a0 = Y_mean-(a1*X_mean)

alpha = math.e**(a0)
beta = a1
print(X)
print ("y=",alpha, "e^", beta,"x")
# Plot the exponential function on top of the original data
plt.scatter(X, Y)
r=[]
for i in range(len(X)):
  r.append(alpha*math.e**(beta*X[i]))

plt.plot(X,r)
plt.show()